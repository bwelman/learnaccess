# Reports {#sec-reports}

```{r, file = "R/webex.R", include = FALSE}
```

::: callout
**OBJECTIVES**

-   What reports are used for.
-   How to create labels using the Wizard.
-   Creating an auto-generated report with manual adjustments
-   Creating a grouped report.
-   Creating a label report with chocolate images
:::

Reports are structured summaries typically intended for printing. Labels are also a form of report.

## Creating Reports {#sec-reports-about}

Reports are used to present summaries or overviews of large data sets, especially when preparing them for printing.

For example, to clearly print a sales summary on paper, you would use a report. Reports can include subtotals and grand totals. You can build reports manually, but using the Wizard is much more efficient.

Reports can also be dynamic through the use of parameters. When opening a report, you may be prompted to enter criteria. For example, the [Sales per box]{.uicontrol} report asks for a start and end date when opened.

## Creating Labels {#sec-reports-labels}

This section explains how to create address labels using the Label Wizard.

:::: {#prp-reports-labels}
[File]{.smallcaps}: `{{< var database >}}`

1.  Open the database.

2.  Select the [Customers]{.uicontrol} table.

3.  Go to [Create \> Labels (group Reports)]{.uicontrol}.

4.  Choose `Metric` units, manufacturer `Avery`, and product `Avery L7160`, see @fig-label-wizard-avery7160.

![Label selection: Avery L7160 (metric, A4)](images/reports/label-wizard-avery7160.png){#fig-label-wizard-avery7160}

5.  Click [Next]{.uicontrol}. On the next screen, you can customize the font and color of the label text.

6.  Accept the default settings and click [Next]{.uicontrol}.

![Inserting fields in the Label Wizard.](images/reports/label-wizard-fields.png){#fig-label-wizard-fields}

::: callout-note
You can insert fields by double-clicking the field name or using the [\>]{.uicontrol} button. The field name appears in curly braces on the sample label. You can type regular text and use Enter to create line breaks.
:::

7.  Create the following sample label (with one space between first and last name, and two spaces between zip code and city):

```         
{FirstName} {LastName}
{Address}
{ZipCode} {City}
```

8.  Click [Next]{.uicontrol}. Choose to sort the labels by [ZipCode]{.varname}.

9.  Click [Next]{.uicontrol}. On the final screen, give the report the name [Labels Customers]{.varname} and click [Finish]{.uicontrol}.

![Print Preview of customer address labels.](images/reports/report-customers-printpreview.png){#fig-report-customers-printpreview}

10. Close the report.
::::

## Auto-Generated Report {#sec-reports-autoreport}

Access can generate a basic report from a table or query. While the result is functional, it often needs manual refinement.

:::: {#prp-reports-autoreport}
[File]{.smallcaps}: `{{< var database >}}`

1.  Open the database.

2.  Select the [Sales per region per box]{.uicontrol} query.

3.  Go to [Create \> Report (Reports group)]{.uicontrol}. The report is generated and opens in [Layout View]{.uicontrol}.

You'll notice that the [Region]{.varname} field is repeated for each record and that the sales amounts are not formatted as currency. We'll fix this.

4.  Close the report and confirm saving when prompted.

5.  Name the report [Sales per region per box]{.varname} and click [OK]{.uicontrol}.

6.  Reopen the report in [Design View]{.uicontrol}.

7.  Select the [Region]{.uicontrol} field in the [Detail]{.uicontrol} section. In the [Property Sheet]{.uicontrol}, set [Hide Duplicates]{.uicontrol} to `Yes`.

::: callout-note
The [Property Sheet]{.uicontrol} can be made visible and invisible by clicking on button [Property Sheet]{.uicontrol} or by using hotkey [F4]{.uicontrol}.
:::

8.  Select the [Sales]{.uicontrol} field and set its [Format]{.uicontrol} to `Currency`.

9.  Switch to [Report View]{.uicontrol}. Now the [Region]{.varname} is shown only once per group and the sales values are formatted properly.

10. Save and close the report.
::::

## Grouped Report {#sec-reports-grouping}

GOAL

Create a report that shows, for a specified period, the sales per box, including order details. For example, see @fig-group-report-result, which shows a portion of the report for November 2009.

![Report November 2009 (partial view).](images/reports/group-report-result.png){#fig-group-report-result}

ANALYSIS

The report needs the following fields:

-   [BoxName]{.varname}
-   [OrderCode]{.varname}
-   [OrderDate]{.varname}
-   [Quantity]{.varname}
-   [Sales]{.varname}, calculated as `[Quantity] * [BoxPrice]`

A query named [Sales per box per order per period]{.varname} already exists and includes all these fields.

::: {#prp-reports-grouping}
[File]{.smallcaps}: `{{< var database >}}`

1.  Open the database.

2.  Select the query [Sales per box per order per period]{.varname}.

3.  Go to [tab Create \> Report Wizard (Reports group)]{.uicontrol}.

![Selecting fields to include in the grouped report.](images/reports/group-wizard-fields.png){#fig-group-wizard-fields}

4.  Add all fields from the query, then click [Next]{.uicontrol}.

5.  Remove the default grouping ([OrderCode]{.varname}) and add [BoxName]{.varname} as the grouping level.

![Choosing grouping levels for the report.](images/reports/group-wizard-levels.png){#fig-group-wizard-levels}

6.  Click [Next]{.uicontrol}. Set sorting to ascending by [OrderCode]{.varname}.

![Defining sort order and summary options.](images/reports/group-wizard-sort.png){#fig-group-wizard-sort}

7.  Click [Summary Options...]{.uicontrol}. Enable summing for both [Quantity]{.varname} and [Sales]{.varname}.

![Enabling calculated totals for Quantity and Sales.](images/reports/group-wizard-summary.png){#fig-group-wizard-summary}

8.  Click [OK]{.uicontrol}, then [Next]{.uicontrol}.

9.  Choose the [Outline]{.uicontrol} layout.

![Choosing the report layout style.](images/reports/group-wizard-layout.png){#fig-group-wizard-layout}

10. Click [Next]{.uicontrol}. Enter the report name: [Sales per box per order per period]{.varname}, then click [Finish]{.uicontrol}.

11. When prompted, enter the start and end dates. For example:

    -   Start Date: `11/1/2009`
    -   End Date: `11/30/2009`

12. Close the report after verifying the output.
:::

## Praline Pictures {#sec-reports-pictures}

In this task, youâ€™ll create a report that includes images of pralines, with the praline code and name displayed above each image. This will be done using labels, with one praline per label.

::: {#prp-reports-pictures}
[File]{.smallcaps}: `{{< var database >}}`

1.  Open the database.

2.  Select the [Pralines]{.uicontrol} table.

3.  Go to [tab Create \> Labels (Reports group)]{.uicontrol}.

4.  Choose `Metric` as the unit, manufacturer `Zweckform`, and product `Zweckform 3415`.

![Label selection: Zweckform 3415 (metric format).](images/reports/label-wizard-zweckform3415.png){#fig-label-wizard-zweckform3415}

5.  Click [Next]{.uicontrol}. On the next screen, you can change the font and text color.

6.  Accept the default settings and click [Next]{.uicontrol}.

7.  Create the following prototype label ( with one space between the fields):

    ```         
    {PralineCode} {PralineName}
    ```

8.  Click [Next]{.uicontrol} and sort the labels by [PralineCode]{.varname}.

9.  Click [Next]{.uicontrol}. Name the report [Labels Pralines]{.varname} and click [Finish]{.uicontrol}.

10. The report is generated and displayed in [Print Preview]{.uicontrol}. Switch to [Design View]{.uicontrol}.

11. Click [Design \> Bound Object Frame (group Controls)]{.uicontrol}, ![](images/common/control-bound-object-frame.png), and draw a square about 1 inch by 1 inch in the [Detail]{.uicontrol} section.

![Inserting a Bound Object Frame for images.](images/reports/label-praline-objectframe.png){#fig-label-praline-objectframe}

12. With the frame selected, adjust the following properties in the [Property Sheet]{.uicontrol}:

    -   In the \[Format\] tab, set Width and Height to `1"` (Access may slightly adjust the dimensions).
    -   In the \[Data\] tab, set the [Control Source]{.uicontrol} to the field `Picture`.

![Setting dimensions of the image frame to 1x1 inch.](images/reports/label-praline-dimensions.png){#fig-label-praline-dimensions}

![Binding the image frame to the Picture field.](images/reports/label-praline-controlsource.png){#fig-label-praline-controlsource}

13. Select the label that is located behind the image frame.

![Selecting the default label underneath the image frame.](images/reports/label-praline-label.png){#fig-label-praline-label}

14. Delete the label using the [Delete]{.uicontrol} key.

15. Switch to [Print Preview]{.uicontrol}.

The images are now displayed, but their vertical alignment may vary. To ensure consistency, the text fields should have a fixed height so all images align evenly.

16. Return to [Design View]{.uicontrol}, select the text box, and set the following properties:
    -   [Height]{.uicontrol}: `0.4"`
    -   [Can Grow]{.uicontrol}: `No`
    -   [Can Shrink]{.uicontrol}: `No`

![Setting fixed height and disabling growth/shrink for the text box.](images/reports/label-praline-textbox.png){#fig-label-praline-textbox}

17. Align the text box and the image frame to the left.

![Aligning the text box and image frame.](images/reports/label-praline-alignment.png){#fig-label-praline-alignment}

18. Switch back to [Print Preview]{.uicontrol} to verify the layout.

![Final result: labels with praline name, code, and image.](images/reports/report-pralines-result.png){#fig-report-pralines-result}

19. Save and close the report.
:::

## Exercises {#sec-reports-exercises}

::: {#exr-rapp001}
**Sales per Region per Box (rapp001)**

Create a report showing sales per region per box. The report should also include the total sales for each region and show the percentage of total sales across all regions. Name the report [rapp001]{.varname}.

![Example output of report \[rapp001\]: Sales per region per box.](images/reports/rapp001-report.png)
:::

::: {#exr-rapp002}
**Sales per Box per Region (rapp002)**

Create a report that shows, for each box, the sales figures per region. Name the report [rapp002]{.varname}.

![Example output of report \[rapp002\]: Sales per box per region.](images/reports/rapp002-report.png)
:::

::: {#exr-rapp003}
**Box and Praline Costs (rapp003)**

Create a report that lists all pralines in each box, including the cost of each praline. Also, include the total praline cost per box. Name the report [rapp003]{.varname}.

![Example output of report \[rapp003\]: Praline costs per box.](images/reports/rapp003-report.png)
:::

:::: {#exr-rapp004}
**Box and Praline Costs Grouped (rapp004)**

Create a copy of the [rapp003]{.varname} report and name the copy [rapp004]{.varname}. Modify the report so that each box starts on a new page. To do this, set the [Force New Page]{.uicontrol} property of the group header to `Before Section`.

Also adjust the layout slightly: move the Sum text box to the right and draw a small horizontal line above the sum.

![Example output of report \[rapp004\]: Grouped praline costs per box with page breaks.](images/reports/rapp004-report.png)

::: {.content-visible when-format="html:js"}
`r hide("Tip")`

Each box forms a group, so the group header is called "Box Header".

`r unhide()`
:::
::::

::: {#exr-rapp005}
**Sales per Box per Order per Period (rapp005)**

Create a copy of the [Sales per box per order per period]{.varname} report and name it [rapp005]{.varname}. Modify the layout so that the total sales per box are printed next to the box name.

![Modified report \[rapp005\]: Totals printed next to box names](images/reports/rapp005-report.png)
:::

:::: {#exr-rapp006}
**Box Data on Separate Pages (rapp006)**

Create a copy of the [rapp005]{.varname} report and name it [rapp006]{.varname}. Modify the design so that each box starts on a new page.

::: {.content-visible when-format="html:js"}
`r hide("Tip")`

Set the [Force New Page]{.uicontrol} property of the BoxName group header to `Before Section`.

`r unhide()`
:::
::::

::: {#exr-rapp007}
**Box Labels (rapp007)**

Create a label report for all boxes following the example below. Use Avery J8163 labels (1Â½" x 3 9/10"), font: Consolas, size: 12 pt, black. Name the report [rapp007]{.varname}.

```         
All Seasons

Code  : ALLS
Weight: 150 gram
```
:::

:::: {#exr-rapp008}
**Yearly Sales per Region (rapp008)**

Create a report based on a parameter query with grouping.

The report should show the number of boxes sold per region for a user-specified year. When opening the report, the user should be prompted to enter the year. Name the report [rapp008]{.varname}.

![Report \[rapp008\]: Yearly box sales per region (example: 2009).](images/reports/rapp008-report.png)

::: {.content-visible when-format="html:js"}
`r hide("Tip")`

First, create a parameter query named [Yearly sales per region]{.varname} that retrieves the required data and prompts for the year.

`r unhide()`
:::
::::
